spring.application.name=servicio-validacion

##puerto automatico aleatorio
server.port=${PORT:0}
##instancia en eureka aleatoria
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
#la ruta de acceso puede mostrar la direccion ip
eureka.instance.prefer-ip-address=true 
##CONEXION CON EUREKA
eureka.client.service-url.defaultZone=http://localhost:8761/eureka


##PARA EL SERVIDOR DE CONFIGURACION CUANDO ESTA EN LA NUBE
##spring.cloud.config.server.git.uri=https://gitlab.com/jorgecrmyerp/microserviciosconspringbootyspringcloudnetflixeurekaconfig.git

##CUANDO EL SERVIDOR DE CONFIGURACION ESTA EN LOCAL
##spring.cloud.config.server.git.uri=file:///D:/Microservicios/Microservicios con Spring Boot y Spring Cloud Netflix Eureka/

##CONFIGURACION CUANDO ESTA PROTEGIDO EL ACCESO A GIT
spring.cloud.config.server.git.username=jorgecrmyerp
spring.cloud.config.server.git.password=Rocherlae01!


#PARA QUE NO DE PROBLEMAS LA SEGURIDAD
##spring.main.allow-circular-references=true

#PARA QUE SE PUEDAN SUBIR FICHEROS
##spring.servlet.multipart.enabled=true
##spring.servlet.multipart.max-file-size=10MB
##spring.servlet.multipart.max-request-size=10MB



##ACTUATOR
management.endpoints.web.exposure.include=*
management.endpoint.auditevents.enabled=true
management.endpoint.health.show-details=ALWAYS
management.endpoint.info.enabled=true
management.endpoint.health.group.custom.include=diskSpace,ping
management.endpoint.health.group.custom.show-components=always
management.endpoint.health.group.custom.show-details=always

logging.level.org.hibernate.SQL=debug
spring.jackson.time-zone=Europe/Madrid
spring.jackson.locale=es_ES

spring.main.allow-circular-references=true

#H2
##spring.datasource.url=jdbc:h2:mem:usuarios
##spring.h2.console.path=/h2-console
##spring.sql.init.username=sa
##spring.sql.init.password=
##spring.jpa.hibernate.ddl-auto=create-drop
##spring.h2.console.enabled=true
##spring.jpa.show-sql=true
##spring.jpa.database-platform=org.hibernate.dialect.H2Dialect



##PARA SQL SERVER

spring.jpa.database=SQL_SERVER
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.datasource.url=jdbc:sqlserver://localhost;databaseName=Hibernate3441
spring.datasource.username=alumno1
spring.datasource.password=alumno1
spring.mvc.pathmatch.matching-strategy=ant-path-matcher   
security.oauth2.resource.filter-order=3


##PARA  PostgreSQL
##spring.datasource.url=jdbc:postgresql://localhost:5432/db_springboot_cloud
##spring.datasource.username=postgres
##spring.datasource.password=sasa
##spring.datasource.driver-class-name=org.postgresql.Driver
##spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
##spring.jpa.hibernate.ddl-auto=create
##logging.level.org.hibernate.SQL=debug
##spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


##PARA MYSQL
# Set here configurations for the database connection
##spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.datasource.url=jdbc:mysql://localhost:3306/microservicios_guzman_productos?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
##spring.datasource.username=admin
##spring.datasource.password=password
##para mysql
##spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

##para mariaDB
##spring.jpa.database-platform=org.hibernate.dialect.MariaDB103Dialect


##genera la tabla
##spring.jpa.generate-ddl=true

##muestra las consultas
##logging.level.org.hibernate.SQL=debug

#Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
##spring.jpa.hibernate.ddl-auto=create-drop

# Show or not log for each sql query
##spring.jpa.show-sql=true
# Naming strategy
##spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
##spring.jpa.hibernate.naming.implicit-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy


